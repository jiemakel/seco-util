package fi.seco.util;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Locale;
import java.util.Map;

public class LocaleUtil {

	public static Map<String, String> iso6392to1 = new HashMap<String, String>();
	static {
		iso6392to1.put("sqi", "sq");
		iso6392to1.put("hye", "hy");
		iso6392to1.put("eus", "eu");
		iso6392to1.put("mya", "my");
		iso6392to1.put("zho", "zh");
		iso6392to1.put("ces", "cs");
		iso6392to1.put("nld", "nl");
		iso6392to1.put("fra", "fr");
		iso6392to1.put("kat", "ka");
		iso6392to1.put("deu", "de");
		iso6392to1.put("ell", "el");
		iso6392to1.put("isl", "is");
		iso6392to1.put("mkd", "mk");
		iso6392to1.put("mri", "mi");
		iso6392to1.put("msa", "ms");
		iso6392to1.put("fas", "fa");
		iso6392to1.put("ron", "ro");
		iso6392to1.put("slk", "sk");
		iso6392to1.put("bod", "bo");
		iso6392to1.put("cym", "cy");
		iso6392to1.put("aar", "aa");
		iso6392to1.put("abk", "ab");
		iso6392to1.put("afr", "af");
		iso6392to1.put("aka", "ak");
		iso6392to1.put("alb", "sq");
		iso6392to1.put("amh", "am");
		iso6392to1.put("ara", "ar");
		iso6392to1.put("arg", "an");
		iso6392to1.put("arm", "hy");
		iso6392to1.put("asm", "as");
		iso6392to1.put("ava", "av");
		iso6392to1.put("ave", "ae");
		iso6392to1.put("aym", "ay");
		iso6392to1.put("aze", "az");
		iso6392to1.put("bak", "ba");
		iso6392to1.put("bam", "bm");
		iso6392to1.put("baq", "eu");
		iso6392to1.put("bel", "be");
		iso6392to1.put("ben", "bn");
		iso6392to1.put("bih", "bh");
		iso6392to1.put("bis", "bi");
		iso6392to1.put("bos", "bs");
		iso6392to1.put("bre", "br");
		iso6392to1.put("bul", "bg");
		iso6392to1.put("bur", "my");
		iso6392to1.put("cat", "ca");
		iso6392to1.put("cha", "ch");
		iso6392to1.put("che", "ce");
		iso6392to1.put("chi", "zh");
		iso6392to1.put("chu", "cu");
		iso6392to1.put("chv", "cv");
		iso6392to1.put("cor", "kw");
		iso6392to1.put("cos", "co");
		iso6392to1.put("cre", "cr");
		iso6392to1.put("cze", "cs");
		iso6392to1.put("dan", "da");
		iso6392to1.put("div", "dv");
		iso6392to1.put("dut", "nl");
		iso6392to1.put("dzo", "dz");
		iso6392to1.put("eng", "en");
		iso6392to1.put("epo", "eo");
		iso6392to1.put("est", "et");
		iso6392to1.put("ewe", "ee");
		iso6392to1.put("fao", "fo");
		iso6392to1.put("fij", "fj");
		iso6392to1.put("fin", "fi");
		iso6392to1.put("fre", "fr");
		iso6392to1.put("fry", "fy");
		iso6392to1.put("ful", "ff");
		iso6392to1.put("geo", "ka");
		iso6392to1.put("ger", "de");
		iso6392to1.put("gla", "gd");
		iso6392to1.put("gle", "ga");
		iso6392to1.put("glg", "gl");
		iso6392to1.put("glv", "gv");
		iso6392to1.put("gre", "el");
		iso6392to1.put("grn", "gn");
		iso6392to1.put("guj", "gu");
		iso6392to1.put("hat", "ht");
		iso6392to1.put("hau", "ha");
		iso6392to1.put("heb", "he");
		iso6392to1.put("her", "hz");
		iso6392to1.put("hin", "hi");
		iso6392to1.put("hmo", "ho");
		iso6392to1.put("hrv", "hr");
		iso6392to1.put("hun", "hu");
		iso6392to1.put("ibo", "ig");
		iso6392to1.put("ice", "is");
		iso6392to1.put("ido", "io");
		iso6392to1.put("iii", "ii");
		iso6392to1.put("iku", "iu");
		iso6392to1.put("ile", "ie");
		iso6392to1.put("ina", "ia");
		iso6392to1.put("ind", "id");
		iso6392to1.put("ipk", "ik");
		iso6392to1.put("ita", "it");
		iso6392to1.put("jav", "jv");
		iso6392to1.put("jpn", "ja");
		iso6392to1.put("kal", "kl");
		iso6392to1.put("kan", "kn");
		iso6392to1.put("kas", "ks");
		iso6392to1.put("kau", "kr");
		iso6392to1.put("kaz", "kk");
		iso6392to1.put("khm", "km");
		iso6392to1.put("kik", "ki");
		iso6392to1.put("kin", "rw");
		iso6392to1.put("kir", "ky");
		iso6392to1.put("kom", "kv");
		iso6392to1.put("kon", "kg");
		iso6392to1.put("kor", "ko");
		iso6392to1.put("kua", "kj");
		iso6392to1.put("kur", "ku");
		iso6392to1.put("lao", "lo");
		iso6392to1.put("lat", "la");
		iso6392to1.put("lav", "lv");
		iso6392to1.put("lim", "li");
		iso6392to1.put("lin", "ln");
		iso6392to1.put("lit", "lt");
		iso6392to1.put("ltz", "lb");
		iso6392to1.put("lub", "lu");
		iso6392to1.put("lug", "lg");
		iso6392to1.put("mac", "mk");
		iso6392to1.put("mah", "mh");
		iso6392to1.put("mal", "ml");
		iso6392to1.put("mao", "mi");
		iso6392to1.put("mar", "mr");
		iso6392to1.put("may", "ms");
		iso6392to1.put("mlg", "mg");
		iso6392to1.put("mlt", "mt");
		iso6392to1.put("mon", "mn");
		iso6392to1.put("nau", "na");
		iso6392to1.put("nav", "nv");
		iso6392to1.put("nbl", "nr");
		iso6392to1.put("nde", "nd");
		iso6392to1.put("ndo", "ng");
		iso6392to1.put("nep", "ne");
		iso6392to1.put("nno", "nn");
		iso6392to1.put("nob", "nb");
		iso6392to1.put("nor", "no");
		iso6392to1.put("nya", "ny");
		iso6392to1.put("oci", "oc");
		iso6392to1.put("oji", "oj");
		iso6392to1.put("ori", "or");
		iso6392to1.put("orm", "om");
		iso6392to1.put("oss", "os");
		iso6392to1.put("pan", "pa");
		iso6392to1.put("per", "fa");
		iso6392to1.put("pli", "pi");
		iso6392to1.put("pol", "pl");
		iso6392to1.put("por", "pt");
		iso6392to1.put("pus", "ps");
		iso6392to1.put("que", "qu");
		iso6392to1.put("roh", "rm");
		iso6392to1.put("rum", "ro");
		iso6392to1.put("run", "rn");
		iso6392to1.put("rus", "ru");
		iso6392to1.put("sag", "sg");
		iso6392to1.put("san", "sa");
		iso6392to1.put("sin", "si");
		iso6392to1.put("slo", "sk");
		iso6392to1.put("slv", "sl");
		iso6392to1.put("sme", "se");
		iso6392to1.put("smo", "sm");
		iso6392to1.put("sna", "sn");
		iso6392to1.put("snd", "sd");
		iso6392to1.put("som", "so");
		iso6392to1.put("sot", "st");
		iso6392to1.put("spa", "es");
		iso6392to1.put("srd", "sc");
		iso6392to1.put("srp", "sr");
		iso6392to1.put("ssw", "ss");
		iso6392to1.put("sun", "su");
		iso6392to1.put("swa", "sw");
		iso6392to1.put("swe", "sv");
		iso6392to1.put("tah", "ty");
		iso6392to1.put("tam", "ta");
		iso6392to1.put("tat", "tt");
		iso6392to1.put("tel", "te");
		iso6392to1.put("tgk", "tg");
		iso6392to1.put("tgl", "tl");
		iso6392to1.put("tha", "th");
		iso6392to1.put("tib", "bo");
		iso6392to1.put("tir", "ti");
		iso6392to1.put("ton", "to");
		iso6392to1.put("tsn", "tn");
		iso6392to1.put("tso", "ts");
		iso6392to1.put("tuk", "tk");
		iso6392to1.put("tur", "tr");
		iso6392to1.put("twi", "tw");
		iso6392to1.put("uig", "ug");
		iso6392to1.put("ukr", "uk");
		iso6392to1.put("urd", "ur");
		iso6392to1.put("uzb", "uz");
		iso6392to1.put("ven", "ve");
		iso6392to1.put("vie", "vi");
		iso6392to1.put("vol", "vo");
		iso6392to1.put("wel", "cy");
		iso6392to1.put("wln", "wa");
		iso6392to1.put("wol", "wo");
		iso6392to1.put("xho", "xh");
		iso6392to1.put("yid", "yi");
		iso6392to1.put("yor", "yo");
		iso6392to1.put("zha", "za");
		iso6392to1.put("zul", "zu");
	}

	public static Locale parseLocaleString(String localeString) {
		if (localeString == null || "".equals(localeString)) return null;
		int langEndInd = localeString.indexOf('_');
		String language = langEndInd != -1 ? localeString.substring(0, langEndInd) : localeString;
		if (language.length() == 3) {
			String tmp = iso6392to1.get(language);
			if (tmp != null) language = tmp;
		}
		String country = "";
		String variant = "";
		if (langEndInd != -1) {
			int countryEndInd = localeString.indexOf('_', langEndInd + 1);
			if (countryEndInd != -1) {
				country = localeString.substring(langEndInd + 1, countryEndInd);
				variant = localeString.substring(countryEndInd + 1);
			} else country = localeString.substring(langEndInd + 1);
		}
		return new Locale(language, country, variant);
	}

	public static List<String> getLocales(String locale, List<String> defaultLocales) {
		List<String> ret = new ArrayList<String>(defaultLocales.size() + 2);
		ret.add(locale);
		if (locale.contains("_")) ret.add(locale.split("_")[0]);
		ret.addAll(defaultLocales);
		return ret;
	}

	public static List<String> getLocales(Locale locale, List<String> defaultLocales) {
		List<String> ret = new ArrayList<String>(defaultLocales.size() + 2);
		ret.add(locale.toString());
		if (!"".equals(locale.getCountry())) ret.add(locale.getLanguage());
		ret.addAll(defaultLocales);
		return ret;
	}

}
